dist: xenial
language:
- cpp
branches:
  only:
  - master
  - coverity_scan
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - gcc-7
    - g++-7
    - gfortran-7
    - cmake
    - libblas-dev
    - liblapack-dev
    - liblapacke-dev
    - openmpi-bin
    - libopenmpi-dev
    - libpetsc3.6
    - libpetsc3.6.2-dev
    - git
    - libxml2-dev
env:
  global:
  - C_COMPILER="gcc-7"
  - CXX_COMPILER="g++-7"
  - Fortran_COMPILER="gfortran-7"
jobs:
  include:
  - if: branch != coverity_scan
    os: linux
    env:
    - BUILD_TYPE="Release" ENABLE_MPI="False"
  - if: branch = coverity_scan
    os: linux
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - gfortran
        - cmake
        - libblas-dev
        - liblapack-dev
        - liblapacke-dev
        - openmpi-bin
        - libopenmpi-dev
        - libpetsc3.6
        - libpetsc3.6.2-dev
        - git
        - libxml2-dev
      coverity_scan:
        project:
          name: optimad/mimmo
          description: 'mimmo :: Surface manipulation and mesh morphing library'
        notification_email: edoardo.lombardi@optimad.it
        build_command_prepend: >
          mkdir build; cd build; cmake -DCMAKE_C_COMPILER=${C_COMPILER} \
            -DCMAKE_CXX_COMPILER=${CXX_COMPILER} \
            -DCMAKE_Fortran_COMPILER=${Fortran_COMPILER} \
            -DPETSC_DIR=/usr/lib/petscdir/3.6.2/x86_64-linux-gnu-real \
            -DPETSC_ARCH= \
            -DCMAKE_BUILD_TYPE=${BUILD_TYPE} \
            -DENABLE_MPI=${ENABLE_MPI} \
            -DVERBOSE_MAKE=True \
            -DBITPIT_DIR=/opt/bitpit/lib/cmake/bitpit-1.6 \
            -DMIMMO_MODULE_GEOHANDLERS=True \
            -DMIMMO_MODULE_IOCGNS=False \
            -DMIMMO_MODULE_IOOFOAM=False \
            -DMIMMO_MODULE_IOVTK=False \
            -DMIMMO_MODULE_PROPAGATORS=True \
            -DMIMMO_MODULE_UTILS=True \
            -DBUILD_EXAMPLES=True \
            -DBUILD_XMLTUI=True \
            ..;
        build_command: >
          make -j2
        branch_pattern: coverity_scan
    env:
    - C_COMPILER="gcc"
    - CXX_COMPILER="g++"
    - Fortran_COMPILER="gfortran"
    - BUILD_TYPE="Debug" ENABLE_MPI="False"
    - secure: "Y9r1i+xsa9l94tXicyXt/MKl9o9JNGS7xYa/Iqh7z4b9oUTnGQlQOAGgKReP8PakfyBNJ4q2uKwpYTIBCstuoRDD0/uQgVFazLQ5/K5euty3I66qZDtpdc52+jUElFKugaT/bpP8c995zq9/Gqv4XmAIJ4SmHq5t9aKEuBgUkOUOC8haEQ/bBDHw7hYt5nC3RxfU3Myxs+59z2zWRMtwZzbnOjaDHMMM5KNcEbkVs9QtJ+en2j4G/fZHqpptU0Msv4y5l1sFhaG9ofIT5qHN4XpYanNPuJC5bhx3iBbQ0wj2hLScC4UCU1wHI3sQpe8iY8sd/EpmztG5RbJ8Yimk/4S3K0iqo2jj29cHvgMzfMKuN2zrynf9KD1wigfHe9wjIkGbQZXCoc+/qTmnaamHBAzBCCzF7Jvh9DD+xDU/JP0MavODwMdeEhoT4ToDt8scpMY1+p3ud22pd2DEHFF5sntpQu08CpFVxGnIav9e4lQ9avJQvdOgLK6XILIG3TnWttBIb7nEb+erz/M7xIFXXei4lzLWMIpimtd5RtD3RxBTCS2HOCfVMjJ3XTDAh2FkRp7ZDkWVXPUXOb1ILhKBAf0bGATPqiHgInP9iP+UKVGkcFdkJ+jgIb/h+lX5c7rvYNdkZeu/2LPin02Qx+4LgcT33UmVOHFh51UJff4LW2I="
before_install:
- echo "Building branch ${TRAVIS_BRANCH}..."
- if [ ${TRAVIS_BRANCH} != "coverity_scan" ]; then echo "Coverity build... No"; else
  echo "Coverity build... Yes"; fi
- sudo apt-get update
- test -n $CC && unset CC
- test -n $CXX && unset CXX
- test -n $FC && unset FC
- if [ ${TRAVIS_BRANCH} == "coverity_scan" ]; then echo -n | openssl s_client -connect
  scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo
  tee -a /etc/ssl/certs/ca-; fi
install:
- echo "Installing bitpit..." && git clone https://github.com/optimad/bitpit.git &&
  cd bitpit && git checkout 9363feb4e6ee1582562f69b01be5c7bd083b0c40 && mkdir build && cd build && cmake -DCMAKE_C_COMPILER=${C_COMPILER}
  -DCMAKE_CXX_COMPILER=${CXX_COMPILER} -DCMAKE_Fortran_COMPILER=${Fortran_COMPILER}
  -DPETSC_DIR=/usr/lib/petscdir/3.6.2/x86_64-linux-gnu-real -DPETSC_ARCH= -DCMAKE_BUILD_TYPE=RelWithDebInfo
  -DENABLE_MPI=False -DVERBOSE_MAKE=False -DCMAKE_INSTALL_PREFIX=/opt/bitpit .. && make
  -j2 install && cd .. && cd .. && echo "bitpit installed"
before_script:
- if [ ${TRAVIS_BRANCH} != "coverity_scan" ]; then mkdir build; cd build; cmake -DCMAKE_C_COMPILER=${C_COMPILER}
  -DCMAKE_CXX_COMPILER=${CXX_COMPILER} -DCMAKE_Fortran_COMPILER=${Fortran_COMPILER}
  -DPETSC_DIR=/usr/lib/petscdir/3.6.2/x86_64-linux-gnu-real -DPETSC_ARCH= -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
  -DENABLE_MPI=${ENABLE_MPI} -DVERBOSE_MAKE=True -DBITPIT_DIR=/opt/bitpit/lib/cmake/bitpit-1.7
  -DMIMMO_MODULE_GEOHANDLERS=True -DMIMMO_MODULE_IOCGNS=False -DMIMMO_MODULE_IOOFOAM=False
  -DMIMMO_MODULE_IOVTK=False -DMIMMO_MODULE_PROPAGATORS=True -DMIMMO_MODULE_UTILS=True
  -DBUILD_EXAMPLES=True -DBUILD_XMLTUI=True ..; fi
script:
- if [ ${TRAVIS_BRANCH} != "coverity_scan" ]; then make -j2 && ctest; fi
after_script:
- sleep 10
